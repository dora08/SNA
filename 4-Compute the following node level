#NodeLevelMeasure(Density,Degree,Reciprocity,Transitivity,Centralization,Clustering.)

library(igraph)

nodes <- read.csv(file.choose(), header=T, , as.is=T)   #Dataset1-Media-Example-NODES
head(nodes)
links <- read.csv(file.choose(), header=T, as.is=T)    #Dataset1-Media-Example-edges
head(links)

# Create a graph from the data
g <- graph.data.frame(d = edges, directed = TRUE, vertices = nodes)

# Plot the graph
plot(g)

# Density
vcount(g)
ecount(g)
ecount(g) / (vcount(g) * (vcount(g) - 1))

# Degree
degree(g)

# Reciprocity
dg <- graph.formula(1-+2, 1-+3, 2++3)
plot(dg)
reciprocity(dg)
dyad.census(dg)
2 * dyad.census(dg)$mut / ecount(dg)

# Transitivity
kite <- graph.famous("Krackhardt_Kite")
atri <- adjacent.triangles(kite)
plot(kite, vertex.label = atri)
transitivity(kite, type = "local")
adjacent.triangles(kite) / (degree(kite) * (degree(kite) - 1) / 2)

# Centralization
centralization.degree(g, mode = "in", normalized = TRUE)

# Closeness
closeness(g, mode = "all", weights = NA)
centralization.closeness(g, mode = "all", normalized = TRUE)

# Betweenness
betweenness(g, directed = TRUE, weights = NA)
edge.betweenness(g, directed = TRUE, weights = NA)
centralization.betweenness(g, directed = TRUE, normalized = TRUE)

# Eigenvector
centralization.evcent(g, directed = TRUE, normalized = TRUE)

# Cluster
g2 <- barabasi.game(50, p = 2, directed = FALSE)
g1 <- watts.strogatz.game(1, size = 100, nei = 5, p = 0.05)
g <- graph.union(g1, g2)
g <- simplify(g)
ebc <- edge.betweenness.community(g, directed = FALSE)
mods <- sapply(0:ecount(g), function(i) {
  g2 <- delete_edges(g, ebc$removed.edges[seq(length = i)])
  c1 <- clusters(g2)$membership
})
plot(mods, pch = 20)
